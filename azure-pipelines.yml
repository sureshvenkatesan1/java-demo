
variables:
  APP_NAME: blue
  MVN_REPO: urs-mvn
  MVN_REPO_PROMOTION: urs-mvn-rc-local
  DOCKER_REG: sivasjpd.jfrog.io
  DOCKER_REPO: urs-docker-dev-local
  BUILD_INFO_WEBAPP: $(Build.DefinitionName)-ado
  BUILD_INFO_DOCKER: docker-$(Build.DefinitionName)-ado

trigger:
- ado2

pool:
  vmImage: ubuntu-latest

jobs:
- job: java_webapp
  steps:
  - task: JfrogCli@1
    inputs:
      artifactoryService: 'sivasjpd'
      useCustomVersion: true
      cliVersion: '2.8'
      command: 'jfrog --version'
  - task: CmdLine@2
    inputs:
      script: |
        appVersion=`sed -n "s/[[:space:]]*<version>\(.*\)<\/version>/\1/p" src/pom.xml`
        echo "##vso[task.setvariable variable=appversion;isOutput=true]$appVersion"
    name: getVersion

  - task: ArtifactoryMaven@2
    inputs:
      mavenPomFile: 'src/pom.xml'
      goals: 'clean package'
      artifactoryResolverService: 'sivasjpd'
      targetResolveReleaseRepo: $(MVN_REPO)
      targetResolveSnapshotRepo: $(MVN_REPO)
      artifactoryDeployService: 'sivasjpd'
      targetDeployReleaseRepo: $(MVN_REPO)
      targetDeploySnapshotRepo: $(MVN_REPO)
      collectBuildInfo: true
      buildName: '$(BUILD_INFO_WEBAPP)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
    displayName: 'Build Maven project'

  - task: ArtifactoryPublishBuildInfo@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: $(BUILD_INFO_WEBAPP)
      buildNumber: '$(Build.BuildNumber)'
    displayName: 'Publish Build Info'

  - task: ArtifactoryXrayScan@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: $(BUILD_INFO_WEBAPP)
      buildNumber: '$(Build.BuildNumber)'
      allowFailBuild: false
    displayName: 'Scan Build Info'
  - task: ArtifactoryProperties@1
    inputs:
      command: 'set'
      artifactoryService: 'sivasjpd'
      setProps: "app.version=$(getVersion.appversion);app.name=$(APP_NAME)"
      specSource: 'taskConfiguration'
      fileSpec: |
        {
          "files": [
            {
              "pattern": "$(MVN_REPO)/",
              "build" : "$(BUILD_INFO_WEBAPP)/$(Build.BuildNumber)",
              "exclusions" : ["*.pom","*library*"]
            }
          ]
        }
    displayName: 'Set properties'

  - task: ArtifactoryBuildPromotion@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: $(BUILD_INFO_WEBAPP)
      buildNumber: '$(Build.BuildNumber)'
      targetRepo: $(MVN_REPO_PROMOTION)
      status: 'XRAY_SCAN_OK'
      comment: 'passed Xray Scan'
      includeDependencies: true
      copy: false
      dryRun: false
    displayName: 'Promote Build Info'

- job: java_docker
  dependsOn:
  - java_webapp
  variables:
    - name: AppVersion
      value: $[ dependencies.java_webapp.outputs['getVersion.appversion'] ]
  steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo 'Hello inline version'
        echo $(AppVersion) 
  - task: DockerInstaller@0
    inputs:
      dockerVersion: '17.09.0-ce'
    displayName: 'Install Docker'
  - task: ArtifactoryGenericDownload@3
    inputs:
      connection: 'sivasjpd'
      specSource: 'taskConfiguration'
      fileSpec: |
        {
          "files": [
            {
              "pattern" : "$(MVN_REPO)/",
              "props"   : "app.name=$(APP_NAME);app.version=$(AppVersion)",
              "target"  : "src/multi-module-application.jar",
              "flat"    : "true"
            }
          ]
        }
      collectBuildInfo: true
      buildName: $(BUILD_INFO_DOCKER)
      buildNumber: '$(Build.BuildNumber)'
      failNoOp: true
    displayName: 'Download webapp'

  - script: |
      docker images
      ls -l src
    displayName: 'Check up '

  - task: Docker@2
    inputs:
      containerRegistry: 'sivasjpd_docker_registry'
      repository: $(DOCKER_REPO)
      command: 'build'
      Dockerfile: 'src/Dockerfile'
      arguments: '-t $(DOCKER_REG)/$(DOCKER_REPO)/azure-java-webapp:$(AppVersion)'
    displayName: 'Build Docker image'

  - task: ArtifactoryDocker@1
    inputs:
      command: 'push'
      artifactoryService: 'sivasjpd'
      targetRepo: '$(DOCKER_REPO)'
      imageName: '$(DOCKER_REG)/$(DOCKER_REPO)/azure-java-webapp:$(AppVersion)'
      collectBuildInfo: true
      buildName: '$(BUILD_INFO_DOCKER)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
    displayName: 'Push Docker image'

  - task: ArtifactoryPublishBuildInfo@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: '$(BUILD_INFO_DOCKER)'
      buildNumber: '$(Build.BuildNumber)'
    displayName: 'Publish Docker Build Info'

  - task: ArtifactoryXrayScan@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: '$(BUILD_INFO_DOCKER)'
      buildNumber: '$(Build.BuildNumber)'
      allowFailBuild: false
    displayName: 'Scan Docker Build Info'

  - task: ArtifactoryBuildPromotion@1
    inputs:
      artifactoryService: 'sivasjpd'
      buildName: '$(BUILD_INFO_DOCKER)'
      buildNumber: '$(Build.BuildNumber)'
      targetRepo: 'urs-docker-release-local'
      status: 'XRAY_SCAN_OK'
      comment: 'passed Xray Scan'
      sourceRepo: 'urs-docker-dev-local'
      includeDependencies: false
      copy: false
      dryRun: false
    displayName: 'Promote Docker Build Info'  
